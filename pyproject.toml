[tool.poetry]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = ["Yasmin Manuela <manuelayasminsc@gmail.com>"]
readme = "README.md"
packages = [{ include = "fast_zero" }]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
fastapi = { extras = ["standard"], version = ">=0.115.12,<0.116.0" }
sqlalchemy = {extras = ["asyncio"], version = "^2.0.40"}
alembic = "^1.15.2"
aiosqlite = "^0.21.0"
pyjwt = "^2.10.1"
tzdata = "^2025.2"
pwdlib = {extras = ["argon2"], version = "^0.2.1"}
psycopg = {extras = ["binary"], version = "^3.2.9"}
pydantic-settings = "^2.9.1"
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
factory-boy = "^3.3.3"
pytest-asyncio = "^0.26.0"
freezegun = "^1.5.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]